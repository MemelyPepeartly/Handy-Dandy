name: Create Release

on:
  push:
    branches:
      - main # Trigger only on a push to main

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
        
    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          
    - name: Install dependencies
      run: npm ci
      
    - name: Check if version has changed
      id: check_version
      run: |
        git fetch --prune --unshallow
        VERSION_CHANGED=$(git diff ${{ github.event.before }} HEAD -- package.json | grep '"version":')
        if [ "$VERSION_CHANGED" != "" ]; then
          echo "::set-output name=version_changed::true"
        fi
        
    - name: Build
      if: steps.check_version.outputs.version_changed == 'true'
      run: npm run build
      
    - name: Create Release and Upload Assets
      if: steps.check_version.outputs.version_changed == 'true'
      id: create_release
      uses: gh-actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.VERSION }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        body: |
          Changes in this Release
          - ...
          
    - name: Zip build files
      if: steps.check_version.outputs.version_changed == 'true'
      run: |
        zip -r build.zip build/
        
    - name: Upload Release Asset
      if: steps.check_version.outputs.version_changed == 'true'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build.zip
        asset_name: build.zip
        asset_content_type: application/zip
        
    - name: Upload module.json as Asset
      if: steps.check_version.outputs.version_changed == 'true'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/module.json
        asset_name: module.json
        asset_content_type: application/json
