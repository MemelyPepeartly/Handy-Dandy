name: Module CI/CD

on:
    push:
        branches:
            - main

jobs: 
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - uses: actions/setup-node@v1
      with:
        node-version: 16
        
    - run: npm install

    - name: List all directories and files
      run: ls -R
      
    - name: Check if version has changed
      id: version_check
      run: node ../check-version.js
      continue-on-error: true
    
    - name: Build Files
      if: steps.version_check.outcome == 'success'
      shell: bash
      id: build-files
      run: npm run build
      
    - name: Get Version
      if: steps.version_check.outcome == 'success'
      shell: bash
      id: get-version
      run: echo "version=$(node ./.github/get-version.js)" >> $GITHUB_ENV
    
    - name: Zip Files
      if: steps.version_check.outcome == 'success'
      working-directory: dist
      run: zip -r ../module.zip ${{ steps.get-version.outputs.version }}
      
    - name: Substitute Manifest and Download Links For Versioned Ones
      if: steps.version_check.outcome == 'success'
      id: sub_manifest_link_latest
      uses: microsoft/variable-substitution@v1
      with:
        files: './dist/module.json'
      env:
        version: ${{ steps.get-version.outputs.version }}
        url: https://github.com/${{ github.repository }}
        manifest: https://github.com/${{ github.repository }}/releases/latest/download/module.json
        download: https://github.com/${{ github.repository }}/releases/latest/download/module.zip
    
    - name: Update Latest Release
      if: steps.version_check.outcome == 'success'
      id: create_latest_release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        name: Latest
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './dist/module.json, ./module.zip'
        tag: latest
    
    - name: Create Version Release
      if: steps.version_check.outcome == 'success'
      id: create_version_release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        name: Release ${{ steps.get-version.outputs.version }}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './dist/module.json,./module.zip'
        tag: ${{ steps.get-version.outputs.version }}
